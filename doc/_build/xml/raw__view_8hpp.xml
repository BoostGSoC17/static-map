<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="raw__view_8hpp" kind="file" language="C++">
    <compoundname>raw_view.hpp</compoundname>
    <includes refid="config_8hpp" local="yes">detail/config.hpp</includes>
    <includes refid="utils_8hpp" local="yes">detail/utils.hpp</includes>
    <includes local="yes">errors.hpp</includes>
    <includes refid="sequence__traits_8hpp" local="yes">sequence_traits.hpp</includes>
    <includes local="yes">view_base.hpp</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="54">
        <label>detail/utils.hpp</label>
        <link refid="utils_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>limits</label>
      </node>
      <node id="61">
        <label>view_base.hpp</label>
      </node>
      <node id="58">
        <label>sequence_traits.hpp</label>
        <link refid="sequence__traits_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>detail/config.hpp</label>
        <link refid="config_8hpp"/>
      </node>
      <node id="57">
        <label>errors.hpp</label>
      </node>
      <node id="55">
        <label>tuple</label>
      </node>
      <node id="59">
        <label>array</label>
      </node>
      <node id="56">
        <label>type_traits</label>
      </node>
      <node id="52">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp</label>
        <link refid="raw__view_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structdetail_1_1raw__view__impl" prot="public">detail::raw_view_impl</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="raw__view_8hpp_1afbca0a8494466fb12b26bdf7165bbc6d" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="config_8hpp_1af7a5d18b85d6b56f84277cd2708ca7b0" kindref="member">BOOST_STATIC_VIEWS_BEGIN_NAMESPACE</ref> constexpr auto</type>
        <definition>BOOST_STATIC_VIEWS_BEGIN_NAMESPACE constexpr auto capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <initializer>= std::integral_constant&lt;std::size_t, N&gt;{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="23" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="raw__view_8hpp_1a2c1dfee112e6ae6ce6f92a9a525cccae" prot="public" static="no" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto raw_view</definition>
        <argsstring></argsstring>
        <name>raw_view</name>
        <initializer>= implementation detail</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-slashes
/// :math:`\textit{raw_view} : \text{Sequence} \to \text{View}` (i.e.
/// takes a :ref:`sequence &lt;sequence-concept&gt;` and returns a
/// :ref:`view &lt;view-concept&gt;`). It will trigger ``static_assert``
/// failures if passed a type not modeling the
/// :ref:`sequence &lt;sequence-concept&gt;` concept.
/// </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="109" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of #boost::static_views::raw_view. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Tom<sp/>Westerhout<sp/>2017.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_STATIC_VIEWS_RAW_VIEW_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_STATIC_VIEWS_RAW_VIEW_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8hpp" kindref="compound">detail/config.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8hpp" kindref="compound">detail/utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;errors.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sequence__traits_8hpp" kindref="compound">sequence_traits.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;view_base.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="config_8hpp_1af7a5d18b85d6b56f84277cd2708ca7b0" kindref="member">BOOST_STATIC_VIEWS_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="23" refid="raw__view_8hpp_1afbca0a8494466fb12b26bdf7165bbc6d" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="raw__view_8hpp_1afbca0a8494466fb12b26bdf7165bbc6d" kindref="member">capacity</ref><sp/>=<sp/>std::integral_constant&lt;std::size_t,<sp/>N&gt;{};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Sequence,<sp/>std::ptrdiff_t<sp/>Extent&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>class<sp/>=<sp/>std::enable_if_t&lt;concepts::Sequence::test&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_cv_t&lt;std::remove_reference_t&lt;Sequence&gt;&gt;&gt;()&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structdetail_1_1raw__view__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1raw__view__impl" kindref="compound">raw_view_impl</ref><sp/>:<sp/>view_base<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>sequence_type<sp/>=<sp/>std::remove_cv_t&lt;Sequence&gt;;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceconcepts_1_1sequence_1a049849734e9ed25c3296bd66be87300f" kindref="member">Sequence</ref>*<sp/>_xs;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="38" refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref>(<ref refid="namespaceconcepts_1_1sequence_1a049849734e9ed25c3296bd66be87300f" kindref="member">Sequence</ref>&amp;<sp/>xs)<sp/>noexcept<sp/>:<sp/>_xs{&amp;xs}<sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref>(<ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref>(<ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref>&amp;<sp/>operator=(<ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref><sp/>const&amp;)<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref>&amp;<sp/>operator=(<ref refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" kindref="member">raw_view_impl</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structdetail_1_1raw__view__impl_1a615f61e1000d8998510e0a7c5a80bd3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>auto<sp/><ref refid="structdetail_1_1raw__view__impl_1a615f61e1000d8998510e0a7c5a80bd3d" kindref="member">extent</ref>()<sp/>noexcept<sp/>-&gt;<sp/>std::ptrdiff_t</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsequence__traits" kindref="compound">sequence_traits&lt;sequence_type&gt;::extent</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structdetail_1_1raw__view__impl_1a2d72b0debd1e18dbc246c5aed7b5119a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1raw__view__impl_1a2d72b0debd1e18dbc246c5aed7b5119a" kindref="member">size</ref>()<sp/>const<sp/>noexcept<sp/>-&gt;<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsequence__traits" kindref="compound">sequence_traits&lt;sequence_type&gt;::size</ref>(*_xs);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_STATIC_VIEWS_FORCEINLINE</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="64" refid="structdetail_1_1raw__view__impl_1a3e3c2bdf410812dd6422d4d5d42006ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1raw__view__impl_1a3e3c2bdf410812dd6422d4d5d42006ad" kindref="member">unsafe_at</ref>(std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1afdad3aa7242c15e4312624c4096b5888" kindref="member">BOOST_STATIC_VIEWS_DECLTYPE_NOEXCEPT_RETURN</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsequence__traits" kindref="compound">sequence_traits&lt;sequence_type&gt;::at</ref>(*_xs,<sp/>i)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_STATIC_VIEWS_FORCEINLINE</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="74" refid="structdetail_1_1raw__view__impl_1a8fe9a53ba27ca7e3899bdfd32b708bd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a516d82020cac114defa81888051e4c11" kindref="member">BOOST_STATIC_VIEWS_DECLTYPE_AUTO</ref><sp/><ref refid="structdetail_1_1raw__view__impl_1a8fe9a53ba27ca7e3899bdfd32b708bd0" kindref="member">operator[]</ref>(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="structdetail_1_1raw__view__impl_1a2d72b0debd1e18dbc246c5aed7b5119a" kindref="member">size</ref>())<sp/>?<sp/><ref refid="structdetail_1_1raw__view__impl_1a3e3c2bdf410812dd6422d4d5d42006ad" kindref="member">unsafe_at</ref>(i)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(make_out_of_bound_error(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;`i<sp/>&lt;<sp/>size()`<sp/>not<sp/>satisfied.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1raw__view__impl_1a3e3c2bdf410812dd6422d4d5d42006ad" kindref="member">unsafe_at</ref>(i));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">make_raw_view<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Seq&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator()(Seq&amp;<sp/>sequence)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>sequence_type<sp/>=<sp/>std::remove_cv_t&lt;Seq&gt;;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concepts::Sequence::check&lt;sequence_type&gt;();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>extent<sp/>=</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsequence__traits" kindref="compound">sequence_traits&lt;sequence_type&gt;::extent</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_view_impl&lt;Seq,<sp/>extent&gt;{sequence};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="raw__view_8hpp_1a2c1dfee112e6ae6ce6f92a9a525cccae" refkind="member"><highlight class="normal"><ref refid="config_8hpp_1a01456e2757ca1ce16c463d9174b3af31" kindref="member">BOOST_STATIC_VIEWS_INLINE_VARIABLE</ref>(detail::make_raw_view,<sp/><ref refid="raw__view_8hpp_1a2c1dfee112e6ae6ce6f92a9a525cccae" kindref="member">raw_view</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="config_8hpp_1a9104b5e36c2866e678338780d2885a02" kindref="member">BOOST_STATIC_VIEWS_END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BOOST_STATIC_VIEWS_RAW_VIEW_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp"/>
  </compounddef>
</doxygen>
