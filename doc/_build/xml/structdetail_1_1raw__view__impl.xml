<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structdetail_1_1raw__view__impl" kind="struct" language="C++" prot="public">
    <compoundname>detail::raw_view_impl</compoundname>
    <basecompoundref prot="public" virt="non-virtual">view_base</basecompoundref>
    <includes refid="raw__view_8hpp" local="no">raw_view.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Sequence</type>
      </param>
      <param>
        <type>std::ptrdiff_t</type>
        <declname>Extent</declname>
        <defname>Extent</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structdetail_1_1raw__view__impl_1a55af6845c6c2bc6c326472470dcd0177" prot="private" static="no">
        <type>std::remove_cv_t&lt; Sequence &gt;</type>
        <definition>using detail::raw_view_impl&lt; Sequence, Extent &gt;::sequence_type =  std::remove_cv_t&lt;Sequence&gt;</definition>
        <argsstring></argsstring>
        <name>sequence_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="33" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structdetail_1_1raw__view__impl_1a920f4889e3a59550eed2811b6a0caaf1" prot="private" static="no" mutable="no">
        <type>Sequence *</type>
        <definition>Sequence* detail::raw_view_impl&lt; Sequence, Extent &gt;::_xs</definition>
        <argsstring></argsstring>
        <name>_xs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="34" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr detail::raw_view_impl&lt; Sequence, Extent &gt;::raw_view_impl</definition>
        <argsstring>(Sequence &amp;xs) noexcept</argsstring>
        <name>raw_view_impl</name>
        <param>
          <type>Sequence &amp;</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="38" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1acbb7c0a1ebe040bfeedb2944fe3ae6c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr detail::raw_view_impl&lt; Sequence, Extent &gt;::raw_view_impl</definition>
        <argsstring>(raw_view_impl const &amp;) noexcept=default</argsstring>
        <name>raw_view_impl</name>
        <param>
          <type><ref refid="structdetail_1_1raw__view__impl" kindref="compound">raw_view_impl</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1abd09bcc9d67362df3ebda853cce38518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr detail::raw_view_impl&lt; Sequence, Extent &gt;::raw_view_impl</definition>
        <argsstring>(raw_view_impl &amp;&amp;) noexcept=default</argsstring>
        <name>raw_view_impl</name>
        <param>
          <type><ref refid="structdetail_1_1raw__view__impl" kindref="compound">raw_view_impl</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1af6da30a113d7398616ac03bb364ca5f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structdetail_1_1raw__view__impl" kindref="compound">raw_view_impl</ref> &amp;</type>
        <definition>constexpr raw_view_impl&amp; detail::raw_view_impl&lt; Sequence, Extent &gt;::operator=</definition>
        <argsstring>(raw_view_impl const &amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structdetail_1_1raw__view__impl" kindref="compound">raw_view_impl</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1a975c45d4bb898cb1afe2a83f8aad2bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structdetail_1_1raw__view__impl" kindref="compound">raw_view_impl</ref> &amp;</type>
        <definition>constexpr raw_view_impl&amp; detail::raw_view_impl&lt; Sequence, Extent &gt;::operator=</definition>
        <argsstring>(raw_view_impl &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structdetail_1_1raw__view__impl" kindref="compound">raw_view_impl</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1a2d72b0debd1e18dbc246c5aed7b5119a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::raw_view_impl&lt; Sequence, Extent &gt;::size</definition>
        <argsstring>() const noexcept -&gt; std::size_t</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="57" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1a3e3c2bdf410812dd6422d4d5d42006ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::raw_view_impl&lt; Sequence, Extent &gt;::unsafe_at</definition>
        <argsstring>(std::size_t const i) const sequence_traits&lt; sequence_type &gt;</argsstring>
        <name>unsafe_at</name>
        <param>
          <type>std::size_t const</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="64" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1a8fe9a53ba27ca7e3899bdfd32b708bd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::raw_view_impl&lt; Sequence, Extent &gt;::operator[]</definition>
        <argsstring>(std::size_t const i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t const</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="74" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="74" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structdetail_1_1raw__view__impl_1a615f61e1000d8998510e0a7c5a80bd3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto detail::raw_view_impl&lt; Sequence, Extent &gt;::extent</definition>
        <argsstring>() noexcept -&gt; std::ptrdiff_t</argsstring>
        <name>extent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="52" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="49">
        <label>view_base</label>
      </node>
      <node id="48">
        <label>detail::raw_view_impl&lt; Sequence, Extent &gt;</label>
        <link refid="structdetail_1_1raw__view__impl"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="51">
        <label>view_base</label>
      </node>
      <node id="50">
        <label>detail::raw_view_impl&lt; Sequence, Extent &gt;</label>
        <link refid="structdetail_1_1raw__view__impl"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" line="30" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp" bodystart="30" bodyend="82"/>
    <listofallmembers>
      <member refid="structdetail_1_1raw__view__impl_1a920f4889e3a59550eed2811b6a0caaf1" prot="private" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>_xs</name></member>
      <member refid="structdetail_1_1raw__view__impl_1a615f61e1000d8998510e0a7c5a80bd3d" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>extent</name></member>
      <member refid="structdetail_1_1raw__view__impl_1af6da30a113d7398616ac03bb364ca5f6" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>operator=</name></member>
      <member refid="structdetail_1_1raw__view__impl_1a975c45d4bb898cb1afe2a83f8aad2bc9" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>operator=</name></member>
      <member refid="structdetail_1_1raw__view__impl_1a8fe9a53ba27ca7e3899bdfd32b708bd0" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>operator[]</name></member>
      <member refid="structdetail_1_1raw__view__impl_1a4bf3c80383c2469ba29d900a05e600d6" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>raw_view_impl</name></member>
      <member refid="structdetail_1_1raw__view__impl_1acbb7c0a1ebe040bfeedb2944fe3ae6c2" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>raw_view_impl</name></member>
      <member refid="structdetail_1_1raw__view__impl_1abd09bcc9d67362df3ebda853cce38518" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>raw_view_impl</name></member>
      <member refid="structdetail_1_1raw__view__impl_1a55af6845c6c2bc6c326472470dcd0177" prot="private" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>sequence_type</name></member>
      <member refid="structdetail_1_1raw__view__impl_1a2d72b0debd1e18dbc246c5aed7b5119a" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>size</name></member>
      <member refid="structdetail_1_1raw__view__impl_1a3e3c2bdf410812dd6422d4d5d42006ad" prot="public" virt="non-virtual"><scope>detail::raw_view_impl</scope><name>unsafe_at</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
